apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.braintreepayments.demo"
        minSdkVersion 18
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.pro'
        }
    }

    lintOptions {
        warning 'InvalidPackage'
        textReport true
        textOutput 'stdout'
    }

    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }
}

configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:23.0.1'
}

dependencies {
    compile 'com.android.support:support-v4:25.0.1'

    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.lukekorth:mailable_log:0.1.4'

    compile 'com.google.android.gms:play-services-wallet:9.8.0'

    compile project(':Braintree')
    compile 'io.card:android-sdk:5.4.2'
    compile('com.braintreepayments.api:drop-in:3.0.0') {
        exclude group: 'com.braintreepayments.api', module: 'braintree'
    }

    debugCompile 'com.facebook.stetho:stetho:1.4.1'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4'

    // Visa Checkout
    compile fileTree(dir: "${rootDir}/libs", include:['*.jar'])
    compile(name: 'VisaCheckout-Android-SDK', version: '4.3', ext: 'aar')
    compile(name: 'facebook-android-sdk-3.23.1', ext: 'aar')
    compile(name: 'card.io-5.3.0', ext: 'aar')
    compile 'com.google.android.gms:play-services-analytics:9.8.0'
    compile 'com.google.android.gms:play-services-ads:9.8.0'
    compile 'com.google.android.gms:play-services-basement:9.8.0'
    compile 'com.parse.bolts:bolts-android:1.4.0'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.squareup.okio:okio:1.6.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile(name: 'eventbus-2.4.0')

    androidTestCompile 'com.lukekorth:device-automator:0.1.0'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile project(':TestUtils')

    testCompile 'junit:junit:4.12'
}

task demoApkSize<<{
  def apkDir = fileTree('./build/outputs/apk')
  def apks = apkDir.matching {
    include '*.apk'
    exclude '*unaligned*'
  }
  apks.visit { apk ->
    def apkName = apk.getName()
    def mb = apk.getSize() / 1024 / 1000
    mb = mb.setScale(2, BigDecimal.ROUND_UP)
    println "Size of ${apkName} is ${mb} MB"
  }
}
demoApkSize.group = 'Braintree'
demoApkSize.description = 'Prints the current size of the Demo apk'

project.tasks.findAll {
  if (it.name.startsWith('assemble')) {
    it.finalizedBy demoApkSize
  }
}
